{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Welcome to MkDocs"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"drop-in-ui-checkout/","text":"Quickly implement a payment management hub to process your payments with Primer's minimum code solution. Display a fully-integrated checkout UI with your preferred payment methods.","title":"Drop-in UI Checkout"},{"location":"headless-checkout/","text":"Enhance your users' journey by tailoring the look-and-feel and the flow of your checkout's UI. Get control of the checkout experience and features to boost your business payment-handling potential. How does the Headless Checkout Work? Primer's displays your custom UIs for the payment methods you associate to your users via Dashboard, while also helping you manage the entire checkout flow. The flow looks as follows: Initialize Headless Universal Checkout. Retrieve and display the payment methods available for the users. Display your custom UI when users select a payment method. Process payments after users complete the checkout. After payments are processed, Primer manages their lifecycle and uses callbacks to keep you informed on their status. Info : For custom UIs, render them using SDKs, or boost the experience even further by building your own custom interface. Quick Start for Web Headless Checkout To ramp up with Headless Checkout for Web: Step 1. Install Prerequisites Install the Universal Checkout Web SDK . Generate a clientToken by creating a client session using POST /client-session . Find the clientToken in the body of the response. Step 2. Initialize Headless Checkout Create your Headless Checkout instance using the clientToken : const headless = await Primer . createHeadless ( clientToken ) Configure Headless Checkout with a callback to retrieve payment methods: await headless . configure ({ onAvailablePaymentMethodsLoad }); Info : Consult optional callbacks for the Headless Checkout. Set headless.start() to retrieve the list of payment methods assigned through Dashboard and start the checkout flow: await headless . start () Info : Learn more on setting up Headless Universal Checkout . Create a Payment Manually To create a payment manually using the Payments API : Initialize Universal Checkout using your clientToken . Set paymentHandling to MANUAL to turn off automatic payment handling. Set up the following callbacks to handle your payments: onTokenizeSuccess() to create payments using a paymentMethodToken . onResumeSuccess() to resume payments using a resumeToken . Retrieve the paymentMethodtoken from onTokenizeSucess() after users submit their payment data. Create a payment request using POST /payments with your paymentMethodToken in the payload. The JSON response of your new payment looks as follows: { \"id\" : \"kHdEw9EG\" , \"date\" : \"2021-02-21T15:36:16.367687\" , \"status\" : \"AUTHORIZED\" , \"orderId\" : \"order-abc\" , \"currencyCode\" : \"EUR\" , \"amount\" : 42 , \"customerId\" : \"customer-123\" , \"customer\" : { \"email\" : \"customer123@gmail.com\" }, \"paymentMethod\" : { \"paymentMethodToken\" : \"heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4\" , \"isVaulted\" : true , \"descriptor\" : \"Purchase: Socks\" , \"analyticsId\" : \"VtkMDAxZW5isH0HsbbNxZ3lo\" , \"paymentMethodType\" : \"PAYMENT_CARD\" , \"paymentMethodData\" : { \"first6Digits\" : \"411111\" , \"last4Digits\" : \"1111\" , \"expirationMonth\" : \"12\" , \"expirationYear\" : \"2030\" , \"cardholderName\" : \"John Biggins\" , \"network\" : \"Visa\" , \"isNetworkTokenized\" : false , \"binData\" : { \"network\" : \"VISA\" , \"regionalRestriction\" : \"UNKNOWN\" , \"accountNumberType\" : \"UNKNOWN\" , \"accountFundingType\" : \"UNKNOWN\" , \"prepaidReloadableIndicator\" : \"NOT_APPLICABLE\" , \"productUsageType\" : \"UNKNOWN\" , \"productCode\" : \"VISA\" , \"productName\" : \"VISA\" } } }, \"processor\" : { \"name\" : \"STRIPE\" , \"processor_merchant_id\" : \"acct_stripe_1234\" , \"amountCaptured\" : 0 , \"amountRefunded\" : 0 }, \"transactions\" : [ { \"type\" : \"SALE\" , \"processorStatus\" : \"AUTHORIZED\" , \"processorName\" : \"STRIPE\" , \"processorMerchantId\" : \"acct_stripe_1234\" , \"processorTransactionId\" : \"54c4eb5b3ef8a\" } ], \"metadata\" : { \"productId\" : 123 , \"merchantId\" : \"a13bsd62s\" } } Info : Learn more on creating payments manually .","title":"Headless Checkout"},{"location":"headless-checkout/#how-does-the-headless-checkout-work","text":"Primer's displays your custom UIs for the payment methods you associate to your users via Dashboard, while also helping you manage the entire checkout flow. The flow looks as follows: Initialize Headless Universal Checkout. Retrieve and display the payment methods available for the users. Display your custom UI when users select a payment method. Process payments after users complete the checkout. After payments are processed, Primer manages their lifecycle and uses callbacks to keep you informed on their status. Info : For custom UIs, render them using SDKs, or boost the experience even further by building your own custom interface.","title":"How does the Headless Checkout Work?"},{"location":"headless-checkout/#quick-start-for-web-headless-checkout","text":"To ramp up with Headless Checkout for Web:","title":"Quick Start for Web Headless Checkout"},{"location":"headless-checkout/#step-1-install-prerequisites","text":"Install the Universal Checkout Web SDK . Generate a clientToken by creating a client session using POST /client-session . Find the clientToken in the body of the response.","title":"Step 1. Install Prerequisites"},{"location":"headless-checkout/#step-2-initialize-headless-checkout","text":"Create your Headless Checkout instance using the clientToken : const headless = await Primer . createHeadless ( clientToken ) Configure Headless Checkout with a callback to retrieve payment methods: await headless . configure ({ onAvailablePaymentMethodsLoad }); Info : Consult optional callbacks for the Headless Checkout. Set headless.start() to retrieve the list of payment methods assigned through Dashboard and start the checkout flow: await headless . start () Info : Learn more on setting up Headless Universal Checkout .","title":"Step 2. Initialize Headless Checkout"},{"location":"headless-checkout/#create-a-payment-manually","text":"To create a payment manually using the Payments API : Initialize Universal Checkout using your clientToken . Set paymentHandling to MANUAL to turn off automatic payment handling. Set up the following callbacks to handle your payments: onTokenizeSuccess() to create payments using a paymentMethodToken . onResumeSuccess() to resume payments using a resumeToken . Retrieve the paymentMethodtoken from onTokenizeSucess() after users submit their payment data. Create a payment request using POST /payments with your paymentMethodToken in the payload. The JSON response of your new payment looks as follows: { \"id\" : \"kHdEw9EG\" , \"date\" : \"2021-02-21T15:36:16.367687\" , \"status\" : \"AUTHORIZED\" , \"orderId\" : \"order-abc\" , \"currencyCode\" : \"EUR\" , \"amount\" : 42 , \"customerId\" : \"customer-123\" , \"customer\" : { \"email\" : \"customer123@gmail.com\" }, \"paymentMethod\" : { \"paymentMethodToken\" : \"heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4\" , \"isVaulted\" : true , \"descriptor\" : \"Purchase: Socks\" , \"analyticsId\" : \"VtkMDAxZW5isH0HsbbNxZ3lo\" , \"paymentMethodType\" : \"PAYMENT_CARD\" , \"paymentMethodData\" : { \"first6Digits\" : \"411111\" , \"last4Digits\" : \"1111\" , \"expirationMonth\" : \"12\" , \"expirationYear\" : \"2030\" , \"cardholderName\" : \"John Biggins\" , \"network\" : \"Visa\" , \"isNetworkTokenized\" : false , \"binData\" : { \"network\" : \"VISA\" , \"regionalRestriction\" : \"UNKNOWN\" , \"accountNumberType\" : \"UNKNOWN\" , \"accountFundingType\" : \"UNKNOWN\" , \"prepaidReloadableIndicator\" : \"NOT_APPLICABLE\" , \"productUsageType\" : \"UNKNOWN\" , \"productCode\" : \"VISA\" , \"productName\" : \"VISA\" } } }, \"processor\" : { \"name\" : \"STRIPE\" , \"processor_merchant_id\" : \"acct_stripe_1234\" , \"amountCaptured\" : 0 , \"amountRefunded\" : 0 }, \"transactions\" : [ { \"type\" : \"SALE\" , \"processorStatus\" : \"AUTHORIZED\" , \"processorName\" : \"STRIPE\" , \"processorMerchantId\" : \"acct_stripe_1234\" , \"processorTransactionId\" : \"54c4eb5b3ef8a\" } ], \"metadata\" : { \"productId\" : 123 , \"merchantId\" : \"a13bsd62s\" } } Info : Learn more on creating payments manually .","title":"Create a Payment Manually"},{"location":"universal-checkout/","text":"Consolidate your business' payments processes and streamline payment flows with Primer's Universal Checkout. Set up workflows to automate payment tasks with an intuitive low-code integration, while keeping your payment data secure. Info : See How Primer Works to leverage your business' payment-handling solutions. Start Receiving Payments Start receiving payments for your business with Universal Checkout . Primer's dynamic low-code checkout UI for handling payment flows. Integrate Universal Checkout in two ways: Drop-in UI Checkout : A ready-to-go checkout UI to start receiving payments using just a few lines of code. Headless Checkout : An in-depth customizable checkout experience with robust tailoring features. Info : Learn more about Universal Checkout in our docs.","title":"Universal Checkout"},{"location":"universal-checkout/#start-receiving-payments","text":"Start receiving payments for your business with Universal Checkout . Primer's dynamic low-code checkout UI for handling payment flows. Integrate Universal Checkout in two ways: Drop-in UI Checkout : A ready-to-go checkout UI to start receiving payments using just a few lines of code. Headless Checkout : An in-depth customizable checkout experience with robust tailoring features. Info : Learn more about Universal Checkout in our docs.","title":"Start Receiving Payments"},{"location":"universal-checkout/drop-in-ui-checkout/","text":"Quickly implement a payment management hub to process your payments with Primer's minimum code solution. Display a fully-integrated checkout UI with your preferred payment methods.","title":"Drop-in UI Checkout"},{"location":"universal-checkout/headless-checkout/","text":"Enhance your users' journey by tailoring the look-and-feel and the flow of your checkout's UI. Get control of the checkout experience and features to boost your business payment-handling potential. How does Headless Checkout Work? Headless Checkout allows you to use custom UIs for the payment methods you enable to your users, while Primer manages the entire checkout flow. The Headless Checkout flow looks as follows: Initialize Headless Universal Checkout. Retrieve and display the payment methods available for the users. Display your custom UI when users select a payment method. Process payments after users complete the checkout. After payments are processed, Primer manages their lifecycle and uses callbacks to keep you informed on their status. Info : For custom UIs, render them using SDKs, or boost the experience even further by building your own custom interface. Quick Start for Web Headless Checkout To ramp up with Headless Checkout for Web: Step 1. Install Prerequisites Install the Universal Checkout Web SDK . Generate a clientToken by creating a client session using POST /client-session . Find the clientToken in the body of the response. Step 2. Initialize Headless Checkout Create your Headless Checkout instance using the clientToken : const headless = await Primer . createHeadless ( clientToken ) Configure Headless Checkout with a callback to retrieve payment methods: await headless . configure ({ onAvailablePaymentMethodsLoad }); Info : Consult optional callbacks for the Headless Checkout. Set headless.start() to retrieve the list of payment methods assigned through Dashboard and start the checkout flow: await headless . start () Info : Learn more on setting up Headless Universal Checkout . Create a Payment Manually To create a payment manually using the Payments API : Initialize Universal Checkout using your clientToken . Set paymentHandling to MANUAL to turn off automatic payment handling. Set up the following callbacks to handle your payments: onTokenizeSuccess() to create payments using a paymentMethodToken . onResumeSuccess() to resume payments using a resumeToken . Retrieve the paymentMethodtoken from onTokenizeSucess() after users submit their payment data. Create a payment request using POST /payments with your paymentMethodToken in the payload. The JSON response that confirms your new payment looks as follows: { \"id\" : \"kHdEw9EG\" , \"date\" : \"2021-02-21T15:36:16.367687\" , \"status\" : \"AUTHORIZED\" , \"orderId\" : \"order-abc\" , \"currencyCode\" : \"EUR\" , \"amount\" : 42 , \"customerId\" : \"customer-123\" , \"customer\" : { \"email\" : \"customer123@gmail.com\" }, \"paymentMethod\" : { \"paymentMethodToken\" : \"heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4\" , \"isVaulted\" : true , \"descriptor\" : \"Purchase: Socks\" , \"analyticsId\" : \"VtkMDAxZW5isH0HsbbNxZ3lo\" , \"paymentMethodType\" : \"PAYMENT_CARD\" , \"paymentMethodData\" : { \"first6Digits\" : \"411111\" , \"last4Digits\" : \"1111\" , \"expirationMonth\" : \"12\" , \"expirationYear\" : \"2030\" , \"cardholderName\" : \"John Biggins\" , \"network\" : \"Visa\" , \"isNetworkTokenized\" : false , \"binData\" : { \"network\" : \"VISA\" , \"regionalRestriction\" : \"UNKNOWN\" , \"accountNumberType\" : \"UNKNOWN\" , \"accountFundingType\" : \"UNKNOWN\" , \"prepaidReloadableIndicator\" : \"NOT_APPLICABLE\" , \"productUsageType\" : \"UNKNOWN\" , \"productCode\" : \"VISA\" , \"productName\" : \"VISA\" } } }, \"processor\" : { \"name\" : \"STRIPE\" , \"processor_merchant_id\" : \"acct_stripe_1234\" , \"amountCaptured\" : 0 , \"amountRefunded\" : 0 }, \"transactions\" : [ { \"type\" : \"SALE\" , \"processorStatus\" : \"AUTHORIZED\" , \"processorName\" : \"STRIPE\" , \"processorMerchantId\" : \"acct_stripe_1234\" , \"processorTransactionId\" : \"54c4eb5b3ef8a\" } ], \"metadata\" : { \"productId\" : 123 , \"merchantId\" : \"a13bsd62s\" } } Info : Learn more on creating payments manually .","title":"Headless Checkout"},{"location":"universal-checkout/headless-checkout/#how-does-headless-checkout-work","text":"Headless Checkout allows you to use custom UIs for the payment methods you enable to your users, while Primer manages the entire checkout flow. The Headless Checkout flow looks as follows: Initialize Headless Universal Checkout. Retrieve and display the payment methods available for the users. Display your custom UI when users select a payment method. Process payments after users complete the checkout. After payments are processed, Primer manages their lifecycle and uses callbacks to keep you informed on their status. Info : For custom UIs, render them using SDKs, or boost the experience even further by building your own custom interface.","title":"How does Headless Checkout Work?"},{"location":"universal-checkout/headless-checkout/#quick-start-for-web-headless-checkout","text":"To ramp up with Headless Checkout for Web:","title":"Quick Start for Web Headless Checkout"},{"location":"universal-checkout/headless-checkout/#step-1-install-prerequisites","text":"Install the Universal Checkout Web SDK . Generate a clientToken by creating a client session using POST /client-session . Find the clientToken in the body of the response.","title":"Step 1. Install Prerequisites"},{"location":"universal-checkout/headless-checkout/#step-2-initialize-headless-checkout","text":"Create your Headless Checkout instance using the clientToken : const headless = await Primer . createHeadless ( clientToken ) Configure Headless Checkout with a callback to retrieve payment methods: await headless . configure ({ onAvailablePaymentMethodsLoad }); Info : Consult optional callbacks for the Headless Checkout. Set headless.start() to retrieve the list of payment methods assigned through Dashboard and start the checkout flow: await headless . start () Info : Learn more on setting up Headless Universal Checkout .","title":"Step 2. Initialize Headless Checkout"},{"location":"universal-checkout/headless-checkout/#create-a-payment-manually","text":"To create a payment manually using the Payments API : Initialize Universal Checkout using your clientToken . Set paymentHandling to MANUAL to turn off automatic payment handling. Set up the following callbacks to handle your payments: onTokenizeSuccess() to create payments using a paymentMethodToken . onResumeSuccess() to resume payments using a resumeToken . Retrieve the paymentMethodtoken from onTokenizeSucess() after users submit their payment data. Create a payment request using POST /payments with your paymentMethodToken in the payload. The JSON response that confirms your new payment looks as follows: { \"id\" : \"kHdEw9EG\" , \"date\" : \"2021-02-21T15:36:16.367687\" , \"status\" : \"AUTHORIZED\" , \"orderId\" : \"order-abc\" , \"currencyCode\" : \"EUR\" , \"amount\" : 42 , \"customerId\" : \"customer-123\" , \"customer\" : { \"email\" : \"customer123@gmail.com\" }, \"paymentMethod\" : { \"paymentMethodToken\" : \"heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4\" , \"isVaulted\" : true , \"descriptor\" : \"Purchase: Socks\" , \"analyticsId\" : \"VtkMDAxZW5isH0HsbbNxZ3lo\" , \"paymentMethodType\" : \"PAYMENT_CARD\" , \"paymentMethodData\" : { \"first6Digits\" : \"411111\" , \"last4Digits\" : \"1111\" , \"expirationMonth\" : \"12\" , \"expirationYear\" : \"2030\" , \"cardholderName\" : \"John Biggins\" , \"network\" : \"Visa\" , \"isNetworkTokenized\" : false , \"binData\" : { \"network\" : \"VISA\" , \"regionalRestriction\" : \"UNKNOWN\" , \"accountNumberType\" : \"UNKNOWN\" , \"accountFundingType\" : \"UNKNOWN\" , \"prepaidReloadableIndicator\" : \"NOT_APPLICABLE\" , \"productUsageType\" : \"UNKNOWN\" , \"productCode\" : \"VISA\" , \"productName\" : \"VISA\" } } }, \"processor\" : { \"name\" : \"STRIPE\" , \"processor_merchant_id\" : \"acct_stripe_1234\" , \"amountCaptured\" : 0 , \"amountRefunded\" : 0 }, \"transactions\" : [ { \"type\" : \"SALE\" , \"processorStatus\" : \"AUTHORIZED\" , \"processorName\" : \"STRIPE\" , \"processorMerchantId\" : \"acct_stripe_1234\" , \"processorTransactionId\" : \"54c4eb5b3ef8a\" } ], \"metadata\" : { \"productId\" : 123 , \"merchantId\" : \"a13bsd62s\" } } Info : Learn more on creating payments manually .","title":"Create a Payment Manually"}]}